spring.application.name=SurveyorTrackingBackend
# DataSource Configuration
spring.datasource.url=jdbc:postgresql://183.82.114.29:5432/location
spring.datasource.username=postgres
spring.datasource.password=NeoGeo@9876
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
logging.level.org.hibernate.SQL=DEBUG

# Flyway migration (temporarily disabled)
spring.flyway.enabled=false
#spring.flyway.baseline-on-migrate=true
#spring.flyway.locations=classpath:db/migration,classpath:db/data

# Server Configuration
server.address=0.0.0.0
server.port=6565
server.servlet.context-path=
spring.mvc.servlet.path=/
server.compression.enabled=true
server.tomcat.connection-timeout=5000
server.tomcat.max-connections=10000
server.tomcat.accept-count=100
server.tomcat.max-threads=200
server.tomcat.protocol=HTTP/1.1
server.http2.enabled=false
spring.mvc.contentnegotiation.favor-parameter=true
# Force HTTP/1.1
server.servlet.application-display-name=SurveyorTrackingBackend
server.tomcat.use-relative-redirects=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET,POST
# Using the same port as the application
management.server.port=${server.port}
spring.jackson.serialization.fail-on-empty-beans=false
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
# Enhanced CORS configuration
# Using more specific settings to fix preflight OPTIONS requests
spring.web.cors.allowed-origins=http://183.82.114.29:9898,http://183.82.114.29:6868,http://183.82.114.29:6565,http://183.82.114.29:6060,http://183.82.114.29:3000,http://localhost:9898,http://localhost:3000,http://localhost:6565,http://localhost:6060,http://127.0.0.1:9898,file://
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.exposed-headers=Authorization
spring.web.cors.allow-credentials=false
spring.web.cors.max-age=3600
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=false
spring.web.cors.max-age=3600

# Frontend configuration (used by CORS)
frontend.port=${FRONTEND_PORT:3000}
server.error.include-message=always
spring.mvc.servlet.path=/
spring.jackson.serialization.indent-output=true

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.configUrl=/api-docs/swagger-config
springdoc.swagger-ui.url=/api-docs
# Update the servers in the OpenAPI description to use the correct port
springdoc.server.url=http://183.82.114.29:6565

# Database Connection Pool Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5
